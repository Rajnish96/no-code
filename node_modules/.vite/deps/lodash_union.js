import {
  require_arrayIncludes,
  require_arrayIncludesWith
} from "./chunk-X3QGPYFG.js";
import {
  require_isArrayLikeObject
} from "./chunk-BUBHTFR7.js";
import {
  require_baseFlatten
} from "./chunk-H3VE2YIM.js";
import {
  require_baseRest
} from "./chunk-L3HEE2JS.js";
import "./chunk-P6LXTWFC.js";
import "./chunk-GXZMSAR3.js";
import "./chunk-XOZNM36G.js";
import {
  require_setToArray
} from "./chunk-MC4HKHJF.js";
import {
  require_Set
} from "./chunk-3KWSWGKK.js";
import {
  require_SetCache,
  require_cacheHas
} from "./chunk-3T5TGVWB.js";
import "./chunk-OI7LQB45.js";
import "./chunk-THPHXGN4.js";
import "./chunk-JZ5U4CZR.js";
import "./chunk-7PB2PNRO.js";
import "./chunk-W53HYEPW.js";
import "./chunk-FK3LLKWB.js";
import "./chunk-E3NM4O75.js";
import "./chunk-CW5QO2B7.js";
import "./chunk-AOALHNJY.js";
import {
  __commonJS
} from "./chunk-HUBM7RA2.js";

// ../../node_modules/lodash/noop.js
var require_noop = __commonJS({
  "../../node_modules/lodash/noop.js"(exports, module) {
    function noop() {
    }
    module.exports = noop;
  }
});

// ../../node_modules/lodash/_createSet.js
var require_createSet = __commonJS({
  "../../node_modules/lodash/_createSet.js"(exports, module) {
    var Set = require_Set();
    var noop = require_noop();
    var setToArray = require_setToArray();
    var INFINITY = 1 / 0;
    var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function(values) {
      return new Set(values);
    };
    module.exports = createSet;
  }
});

// ../../node_modules/lodash/_baseUniq.js
var require_baseUniq = __commonJS({
  "../../node_modules/lodash/_baseUniq.js"(exports, module) {
    var SetCache = require_SetCache();
    var arrayIncludes = require_arrayIncludes();
    var arrayIncludesWith = require_arrayIncludesWith();
    var cacheHas = require_cacheHas();
    var createSet = require_createSet();
    var setToArray = require_setToArray();
    var LARGE_ARRAY_SIZE = 200;
    function baseUniq(array, iteratee, comparator) {
      var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      } else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache();
      } else {
        seen = iteratee ? [] : result;
      }
      outer:
        while (++index < length) {
          var value = array[index], computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var seenIndex = seen.length;
            while (seenIndex--) {
              if (seen[seenIndex] === computed) {
                continue outer;
              }
            }
            if (iteratee) {
              seen.push(computed);
            }
            result.push(value);
          } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) {
              seen.push(computed);
            }
            result.push(value);
          }
        }
      return result;
    }
    module.exports = baseUniq;
  }
});

// ../../node_modules/lodash/union.js
var require_union = __commonJS({
  "../../node_modules/lodash/union.js"(exports, module) {
    var baseFlatten = require_baseFlatten();
    var baseRest = require_baseRest();
    var baseUniq = require_baseUniq();
    var isArrayLikeObject = require_isArrayLikeObject();
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });
    module.exports = union;
  }
});
export default require_union();
//# sourceMappingURL=lodash_union.js.map
